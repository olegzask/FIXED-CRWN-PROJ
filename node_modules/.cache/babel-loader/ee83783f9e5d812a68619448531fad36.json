{"ast":null,"code":"import { async } from \"@firebase/util\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvPU9TBST_GBebNa-yqQesdwkCvNKV1RM\",\n  authDomain: \"crown-clothin-app.firebaseapp.com\",\n  projectId: \"crown-clothin-app\",\n  storageBucket: \"crown-clothin-app.appspot.com\",\n  messagingSenderId: \"985550680109\",\n  appId: \"1:985550680109:web:579b644592af6d703d08a4\",\n  measurementId: \"G-H709DH4C00\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const createUserProfileDocument = async userAuth => {\n  if (!userAuth) return;\n  console.log(userAuth);\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n};\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createuserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating use\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const SignOutUser = async () => {\n  console.log(\"Signing Out...\");\n  return await signOut(auth);\n};\n_c = SignOutUser;\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignOutUser\");","map":{"version":3,"sources":["/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/utils/firebase/firebase.utils.js"],"names":["async","initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","provider","setCustomParameters","prompt","createUserProfileDocument","userAuth","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","db","auth","signInWithGooglePopup","createuserDocumentFromAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthWithEmailAndPassword","password","signInUserWithEmailAndPassword","SignOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { async } from \"@firebase/util\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvPU9TBST_GBebNa-yqQesdwkCvNKV1RM\",\n  authDomain: \"crown-clothin-app.firebaseapp.com\",\n  projectId: \"crown-clothin-app\",\n  storageBucket: \"crown-clothin-app.appspot.com\",\n  messagingSenderId: \"985550680109\",\n  appId: \"1:985550680109:web:579b644592af6d703d08a4\",\n  measurementId: \"G-H709DH4C00\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const createUserProfileDocument = async (userAuth) => {\n  if (!userAuth) return;\n\n  console.log(userAuth);\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n};\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\nexport const db = getFirestore();\n\nexport const createuserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log(\"error creating use\", error.message);\n    }\n  }\n  return userDocRef;\n};\n\nexport const createAuthWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const SignOutUser = async () => {\n  console.log(\"Signing Out...\");\n  return await signOut(auth);\n};\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n"]},"metadata":{},"sourceType":"module"}