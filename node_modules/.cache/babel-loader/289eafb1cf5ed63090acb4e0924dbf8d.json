{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/contexts/cart-dropdown.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains product it wants ot add\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if found increment quantity by 1\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => {\n      if (cartItem.id === productToAdd.id) {\n        return { ...cartItem,\n          quantity: cartItem.quantity + 1\n        };\n      } else return cartItem;\n    });\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst minusItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if found increment quantity by 1\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => {\n      if (cartItem.id === productToAdd.id) {\n        return { ...cartItem,\n          quantity: cartItem.quantity - 1\n        };\n      } else return cartItem;\n    });\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const cartDropDownContext = /*#__PURE__*/createContext({\n  dropDown: false,\n  setDropDown: () => {},\n  cartItems: [],\n  itemCount: 0,\n  addItemToCart: () => {},\n  delItem: () => {}\n});\nexport const CartDropDownProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dropDown, setDropDown] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [itemCount, setItemCount] = useState(0);\n  useEffect(() => {\n    let num = 0;\n    cartItems.map(item => num = num + item.quantity);\n    setItemCount(num);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n    console.log(\"item added to cart...\");\n  };\n\n  const decreaceItemCount = productToAdd => {\n    setCartItems();\n  };\n\n  const delItem = product => {\n    setCartItems(cartItems.filter(item => item.id != product.id));\n  };\n\n  const value = {\n    dropDown,\n    setDropDown,\n    addItemToCart,\n    cartItems,\n    setCartItems,\n    itemCount,\n    setItemCount,\n    delItem\n  };\n  return /*#__PURE__*/_jsxDEV(cartDropDownContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartDropDownProvider, \"E6Bodmb3zFarD/Vbr2sobkxmai4=\");\n\n_c = CartDropDownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropDownProvider\");","map":{"version":3,"sources":["/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/contexts/cart-dropdown.context.jsx"],"names":["React","createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","minusItem","cartDropDownContext","dropDown","setDropDown","itemCount","addItemToCart","delItem","CartDropDownProvider","children","setCartItems","setItemCount","num","item","console","log","decreaceItemCount","product","filter","value"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains product it wants ot add\n\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n  //if found increment quantity by 1\n  if (existingCartItem) {\n    return cartItems.map((cartItem) => {\n      if (cartItem.id === productToAdd.id) {\n        return {\n          ...cartItem,\n          quantity: cartItem.quantity + 1,\n        };\n      } else return cartItem;\n    });\n  }\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst minusItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n  //if found increment quantity by 1\n  if (existingCartItem) {\n    return cartItems.map((cartItem) => {\n      if (cartItem.id === productToAdd.id) {\n        return {\n          ...cartItem,\n          quantity: cartItem.quantity - 1,\n        };\n      } else return cartItem;\n    });\n  }\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const cartDropDownContext = createContext({\n  dropDown: false,\n  setDropDown: () => {},\n  cartItems: [],\n  itemCount: 0,\n\n  addItemToCart: () => {},\n  delItem: () => {},\n});\n\nexport const CartDropDownProvider = ({ children }) => {\n  const [dropDown, setDropDown] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [itemCount, setItemCount] = useState(0);\n\n  useEffect(() => {\n    let num = 0;\n    cartItems.map((item) => (num = num + item.quantity));\n    setItemCount(num);\n  }, [cartItems]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n    console.log(\"item added to cart...\");\n  };\n\n  const decreaceItemCount = (productToAdd) => {\n    setCartItems();\n  };\n\n  const delItem = (product) => {\n    setCartItems(cartItems.filter((item) => item.id != product.id));\n  };\n\n  const value = {\n    dropDown,\n    setDropDown,\n    addItemToCart,\n    cartItems,\n    setCartItems,\n    itemCount,\n    setItemCount,\n    delItem,\n  };\n  return (\n    <cartDropDownContext.Provider value={value}>\n      {children}\n    </cartDropDownContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}