{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/components/sign-up-form/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { async } from \"@firebase/util\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { createAuthWithEmailAndPassword, createuserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst SignUpForm = _ref => {\n  _s();\n\n  let {\n    inputFields\n  } = _ref;\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password do not match!\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await createAuthWithEmailAndPassword(email, password);\n      console.log(user);\n      await createuserDocumentFromAuth(user, {\n        displayName\n      });\n      setFormFields(defaultFormFields);\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"EMAIL ALREADY IN USE!\");\n      } else console.log(error);\n    }\n  };\n\n  const valueCoder = input => {\n    if (input.name === \"displayName\") return displayName;\n    if (input.name === \"email\") return email;\n    if (input.name === \"password\") return password;\n    if (input.name === \"confirmPassword\") return confirmPassword;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [inputFields.map(input => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: input.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          onChange: handleChange,\n          type: input.type,\n          name: input.name,\n          value: valueCoder(input),\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, input.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/components/sign-up-form/sign-up.component.jsx"],"names":["async","React","useState","useEffect","Fragment","createAuthWithEmailAndPassword","createuserDocumentFromAuth","FormInput","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","inputFields","formFields","setFormFields","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","user","console","log","error","code","valueCoder","input","map","label","type","key"],"mappings":"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","sourcesContent":["import { async } from \"@firebase/util\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  createAuthWithEmailAndPassword,\n  createuserDocumentFromAuth,\n} from \"../../utils/firebase/firebase.utils\";\nimport { FormInput } from \"../form-input/form-input.component\";\n\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst SignUpForm = ({ inputFields }) => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Password do not match!\");\n      return;\n    }\n    try {\n      const { user } = await createAuthWithEmailAndPassword(email, password);\n      console.log(user);\n      await createuserDocumentFromAuth(user, { displayName });\n      setFormFields(defaultFormFields);\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"EMAIL ALREADY IN USE!\");\n      } else console.log(error);\n    }\n  };\n\n  const valueCoder = (input) => {\n    if (input.name === \"displayName\") return displayName;\n    if (input.name === \"email\") return email;\n    if (input.name === \"password\") return password;\n    if (input.name === \"confirmPassword\") return confirmPassword;\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {inputFields.map((input) => {\n        return (\n          <div key={input.key}>\n            <label>{input.label}</label>\n            <input\n              required\n              onChange={handleChange}\n              type={input.type}\n              name={input.name}\n              value={valueCoder(input)}\n              onChange={handleChange}\n            />\n          </div>\n        );\n      })}\n      <button type=\"submit\">SUBMIT</button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}