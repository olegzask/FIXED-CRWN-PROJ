{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/components/sign-in-form/sign-in-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { async } from \"@firebase/util\";\nimport React, { useState } from \"react\";\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { signInWithGooglePopup, createuserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport { SignIn } from \"../sign-in-google/sign-in-google.component\";\nimport \"..//sign-in-form/sign-in-form.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\"\n};\nexport const SignInForm = _ref => {\n  _s();\n\n  let {\n    inputFields\n  } = _ref;\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup();\n    const userDocRef = await createuserDocumentFromAuth(user);\n  };\n\n  const handleSignIn = async event => {\n    event.preventDefault();\n    console.log(\"Trying to Sign In...\");\n    setFormFields(defaultFormFields);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const valueCoder = input => {\n    if (input.name === \"email\") return email;\n\n    if (input.name === \"password\") {\n      return password;\n    } else return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container sign-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign In with email & password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      props: {\n        handleChange,\n        valueCoder,\n        inputFields,\n        handleSignIn,\n        buttonName: \"SIGN IN\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-sign\",\n      children: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/components/sign-in-form/sign-in-form.component.jsx"],"names":["async","React","useState","FormInput","GoogleAuthProvider","signInWithGooglePopup","createuserDocumentFromAuth","SignIn","defaultFormFields","email","password","SignInForm","inputFields","formFields","setFormFields","signInWithGoogle","user","userDocRef","handleSignIn","event","preventDefault","console","log","handleChange","name","value","target","valueCoder","input","buttonName"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SACEC,qBADF,EAEEC,0BAFF,QAGO,qCAHP;AAIA,SAASC,MAAT,QAAuB,4CAAvB;AACA,OAAO,2CAAP;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE;AAFc,CAA1B;AAKA,OAAO,MAAMC,UAAU,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACM,iBAAD,CAA5C;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBG,UAA5B;;AAEA,QAAME,gBAAgB,GAAG,YAAY;AACnC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,qBAAqB,EAA5C;AACA,UAAMY,UAAU,GAAG,MAAMX,0BAA0B,CAACU,IAAD,CAAnD;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAR,IAAAA,aAAa,CAACN,iBAAD,CAAb;AACD,GAJD;;AAMA,QAAMe,YAAY,GAAIJ,KAAD,IAAW;AAC9B,UAAM;AAAEK,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBN,KAAK,CAACO,MAA9B;AACAZ,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACW,IAAD,GAAQC;AAAzB,KAAD,CAAb;AACD,GAHD;;AAKA,QAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACJ,IAAN,KAAe,OAAnB,EAA4B,OAAOf,KAAP;;AAC5B,QAAImB,KAAK,CAACJ,IAAN,KAAe,UAAnB,EAA+B;AAC7B,aAAOd,QAAP;AACD,KAFD,MAEO;AACR,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AACE,MAAA,KAAK,EAAE;AACLa,QAAAA,YADK;AAELI,QAAAA,UAFK;AAGLf,QAAAA,WAHK;AAILM,QAAAA,YAJK;AAKLW,QAAAA,UAAU,EAAE;AALP;AADT;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CM;;GAAMlB,U;;KAAAA,U","sourcesContent":["import { async } from \"@firebase/util\";\nimport React, { useState } from \"react\";\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport {\n  signInWithGooglePopup,\n  createuserDocumentFromAuth,\n} from \"../../utils/firebase/firebase.utils\";\nimport { SignIn } from \"../sign-in-google/sign-in-google.component\";\nimport \"..//sign-in-form/sign-in-form.styles.scss\";\n\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\",\n};\n\nexport const SignInForm = ({ inputFields }) => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n\n  const signInWithGoogle = async () => {\n    const { user } = await signInWithGooglePopup();\n    const userDocRef = await createuserDocumentFromAuth(user);\n  };\n\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    console.log(\"Trying to Sign In...\");\n    setFormFields(defaultFormFields);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const valueCoder = (input) => {\n    if (input.name === \"email\") return email;\n    if (input.name === \"password\") {\n      return password;\n    } else return;\n  };\n\n  return (\n    <div className=\"sign-up-container sign-in-container\">\n      <h2>Already have an account?</h2>\n      <span>Sign In with email & password</span>\n      <FormInput\n        props={{\n          handleChange,\n          valueCoder,\n          inputFields,\n          handleSignIn,\n          buttonName: \"SIGN IN\",\n        }}\n      />\n      <div className=\"google-sign\">\n        <SignIn />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}