{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/contexts/cart-dropdown.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains product it wants ot add\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if found increment quantity by 1\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => {\n      const itemPrice = cartItem.price;\n\n      if (cartItem.id === productToAdd.id) {\n        return { ...cartItem,\n          price: cartItem.price + itemPrice,\n          quantity: cartItem.quantity + 1\n        };\n      } else return cartItem;\n\n      cartItem.id === productToAdd.id ? { ...cartItem,\n        price: cartItem.price + itemPrice,\n        quantity: cartItem.quantity + 1\n      } : cartItem;\n    });\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const cartDropDownContext = /*#__PURE__*/createContext({\n  dropDown: false,\n  setDropDown: () => {},\n  cartItems: [],\n  addItemToCart: () => {}\n});\nexport const CartDropDownProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dropDown, setDropDown] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n    console.log(\"item added to cart...\");\n  };\n\n  const value = {\n    dropDown,\n    setDropDown,\n    addItemToCart,\n    cartItems\n  };\n  return /*#__PURE__*/_jsxDEV(cartDropDownContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartDropDownProvider, \"OB6LeITdzLxbIAO4GFo8fGi34K8=\");\n\n_c = CartDropDownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropDownProvider\");","map":{"version":3,"sources":["/home/oleg/Downloads/checkcode/crwn-clothing-v2-lesson-6/FIXED-CRWN-PROJ/src/contexts/cart-dropdown.context.jsx"],"names":["React","createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","itemPrice","price","quantity","cartDropDownContext","dropDown","setDropDown","addItemToCart","CartDropDownProvider","children","setCartItems","console","log","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC/C;AAEA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EADpB,CAAzB,CAH+C,CAM/C;;AACA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAc;AACjC,YAAMG,SAAS,GAAGH,QAAQ,CAACI,KAA3B;;AACA,UAAIJ,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAAjC,EAAqC;AACnC,eAAO,EACL,GAAGD,QADE;AAELI,UAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiBD,SAFnB;AAGLE,UAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AAHzB,SAAP;AAKD,OAND,MAMO,OAAOL,QAAP;;AAEPA,MAAAA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GACI,EACE,GAAGD,QADL;AAEEI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiBD,SAF1B;AAGEE,QAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AAHhC,OADJ,GAMIL,QANJ;AAOD,KAjBM,CAAP;AAkBD;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,YAAL;AAAmBQ,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACD,CA5BD;;AA8BA,OAAO,MAAMC,mBAAmB,gBAAGb,aAAa,CAAC;AAC/Cc,EAAAA,QAAQ,EAAE,KADqC;AAE/CC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAF0B;AAG/CZ,EAAAA,SAAS,EAAE,EAHoC;AAI/Ca,EAAAA,aAAa,EAAE,MAAM,CAAE;AAJwB,CAAD,CAAzC;AAOP,OAAO,MAAMC,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAM,CAACJ,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACE,SAAD,EAAYgB,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,aAAa,GAAIZ,YAAD,IAAkB;AACtCe,IAAAA,YAAY,CAACjB,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAHD;;AAKA,QAAMC,KAAK,GAAG;AAAER,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,aAAzB;AAAwCb,IAAAA;AAAxC,GAAd;AACA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEmB,KAArC;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains product it wants ot add\n\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n  //if found increment quantity by 1\n  if (existingCartItem) {\n    return cartItems.map((cartItem) => {\n      const itemPrice = cartItem.price;\n      if (cartItem.id === productToAdd.id) {\n        return {\n          ...cartItem,\n          price: cartItem.price + itemPrice,\n          quantity: cartItem.quantity + 1,\n        };\n      } else return cartItem;\n\n      cartItem.id === productToAdd.id\n        ? {\n            ...cartItem,\n            price: cartItem.price + itemPrice,\n            quantity: cartItem.quantity + 1,\n          }\n        : cartItem;\n    });\n  }\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const cartDropDownContext = createContext({\n  dropDown: false,\n  setDropDown: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n});\n\nexport const CartDropDownProvider = ({ children }) => {\n  const [dropDown, setDropDown] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n    console.log(\"item added to cart...\");\n  };\n\n  const value = { dropDown, setDropDown, addItemToCart, cartItems };\n  return (\n    <cartDropDownContext.Provider value={value}>\n      {children}\n    </cartDropDownContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}